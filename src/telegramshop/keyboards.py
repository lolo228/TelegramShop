"""
–ú–æ–¥—É–ª—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –±–æ—Ç–∞
"""
from aiogram.types import (
    ReplyKeyboardMarkup, 
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)


def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üõí –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä"),
                KeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
            ],
            [
                KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
            ],
            [
                KeyboardButton(text="üìã –ü—Ä–∞–≤–∏–ª–∞"),
                KeyboardButton(text="‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏–∏"),
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")
            ]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_subscription_keyboard(channel_url: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è",
                    url=channel_url
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                    callback_data="check_subscription"
                )
            ]
        ]
    )
    return keyboard


def get_profile_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì¶ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤",
                    callback_data="order_history"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    callback_data="add_balance"
                ),
                InlineKeyboardButton(
                    text="üí≥ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π",
                    callback_data="payment_history"
                )
            ]
        ]
    )
    return keyboard


def get_back_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data="back_to_profile"
                )
            ]
        ]
    )
    return keyboard


def get_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                    callback_data="cancel"
                )
            ]
        ]
    )
    return keyboard


def get_categories_keyboard(categories: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
    buttons = []
    
    for category in categories:
        buttons.append([
            InlineKeyboardButton(
                text=category['name'],
                callback_data=f"category_{category['category_id']}"
            )
        ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_products_keyboard(products: list, category_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    buttons = []
    
    for product in products:
        stock_emoji = "‚úÖ" if product['stock_count'] > 0 else "‚ùå"
        buttons.append([
            InlineKeyboardButton(
                text=f"{stock_emoji} {product['name']} - {product['price']} —Ä—É–±. (–≤ –Ω–∞–ª–∏—á–∏–∏: {product['stock_count']})",
                callback_data=f"product_{product['product_id']}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
            callback_data="back_to_categories"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_product_detail_keyboard(product_id: int, category_id: int, in_stock: bool) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞"""
    buttons = []
    
    if in_stock:
        buttons.append([
            InlineKeyboardButton(
                text="üõí –ö—É–ø–∏—Ç—å",
                callback_data=f"buy_{product_id}"
            )
        ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–æ–≤–∞—Ä–∞–º",
            callback_data=f"category_{category_id}"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


# –ê–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

def get_admin_main_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
                    callback_data="admin_products"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
                    callback_data="admin_users"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    callback_data="admin_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞",
                    callback_data="admin_broadcast"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìù –¢–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫",
                    callback_data="admin_info_texts"
                )
            ]
        ]
    )
    return keyboard


def get_admin_products_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
                    callback_data="admin_categories_list"
                ),
                InlineKeyboardButton(
                    text="üì¶ –¢–æ–≤–∞—Ä—ã",
                    callback_data="admin_products_list"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                    callback_data="admin_add_category"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
                    callback_data="admin_add_product"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                    callback_data="admin_menu"
                )
            ]
        ]
    )
    return keyboard


def get_admin_categories_list_keyboard(categories: list, page: int = 0) -> InlineKeyboardMarkup:
    """–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    buttons = []
    
    for category in categories:
        status = "‚úÖ" if category['is_active'] else "‚ùå"
        buttons.append([
            InlineKeyboardButton(
                text=f"{status} {category['name']}",
                callback_data=f"admin_category_{category['category_id']}"
            )
        ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="admin_products"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_admin_category_actions_keyboard(category_id: int, is_active: bool) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π"""
    toggle_text = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" if is_active else "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"admin_edit_category_{category_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=toggle_text,
                    callback_data=f"admin_toggle_category_{category_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üóë –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"admin_delete_category_{category_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                    callback_data="admin_categories_list"
                )
            ]
        ]
    )
    return keyboard


def get_admin_products_list_keyboard(products: list) -> InlineKeyboardMarkup:
    """–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    buttons = []
    
    for product in products:
        status = "‚úÖ" if product['is_active'] else "‚ùå"
        category_name = product.get('category_name', '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
        buttons.append([
            InlineKeyboardButton(
                text=f"{status} {product['name']} ({category_name}) - {product['price']}‚ÇΩ",
                callback_data=f"admin_product_{product['product_id']}"
            )
        ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="admin_products"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_admin_product_actions_keyboard(product_id: int, is_active: bool) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–æ–º"""
    toggle_text = "‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" if is_active else "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"admin_edit_product_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–∑–∏—Ü–∏–∏",
                    callback_data=f"admin_load_items_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=toggle_text,
                    callback_data=f"admin_toggle_product_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üóë –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"admin_delete_product_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                    callback_data="admin_products_list"
                )
            ]
        ]
    )
    return keyboard


def get_admin_users_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                    callback_data="admin_users_list_0"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    callback_data="admin_search_user"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                    callback_data="admin_menu"
                )
            ]
        ]
    )
    return keyboard


def get_admin_users_list_keyboard(users: list, page: int = 0, total_pages: int = 1) -> InlineKeyboardMarkup:
    """–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    buttons = []
    
    for user in users:
        status = "üö´" if user.get('is_blocked') else "‚úÖ"
        username = f"@{user['username']}" if user.get('username') else user['first_name']
        buttons.append([
            InlineKeyboardButton(
                text=f"{status} {username} (ID: {user['user_id']}) - {user['balance']}‚ÇΩ",
                callback_data=f"admin_user_{user['user_id']}"
            )
        ])
    
    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination = []
    if page > 0:
        pagination.append(
            InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"admin_users_list_{page - 1}"
            )
        )
    if page < total_pages - 1:
        pagination.append(
            InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è",
                callback_data=f"admin_users_list_{page + 1}"
            )
        )
    
    if pagination:
        buttons.append(pagination)
    
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="admin_users"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_admin_user_actions_keyboard(user_id: int, is_blocked: bool) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    block_text = "‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" if is_blocked else "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    callback_data=f"admin_change_balance_{user_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=block_text,
                    callback_data=f"admin_toggle_block_{user_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                    callback_data="admin_users_list_0"
                )
            ]
        ]
    )
    return keyboard


def get_broadcast_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å",
                    callback_data="admin_broadcast_confirm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                    callback_data="admin_broadcast_cancel"
                )
            ]
        ]
    )
    return keyboard


def get_admin_select_category_keyboard(categories: list) -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞"""
    buttons = []
    
    for category in categories:
        buttons.append([
            InlineKeyboardButton(
                text=category['name'],
                callback_data=f"admin_select_cat_{category['category_id']}"
            )
        ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="admin_products"
        )
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_admin_info_texts_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –ü—Ä–∞–≤–∏–ª–∞",
                    callback_data="admin_info_text_rules"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏–∏",
                    callback_data="admin_info_text_guarantees"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùì –ü–æ–º–æ—â—å",
                    callback_data="admin_info_text_help"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                    callback_data="admin_menu"
                )
            ]
        ]
    )
    return keyboard


def get_admin_info_text_actions_keyboard(text_type: str) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üëÅ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä",
                    callback_data=f"admin_info_preview_{text_type}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"admin_info_edit_{text_type}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞ –¥–µ—Ñ–æ–ª—Ç",
                    callback_data=f"admin_info_reset_{text_type}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data="admin_info_texts"
                )
            ]
        ]
    )
    return keyboard


def get_edit_category_fields_keyboard(category_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",
                    callback_data=f"admin_edit_cat_name_{category_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìÑ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ",
                    callback_data=f"admin_edit_cat_desc_{category_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"admin_category_{category_id}"
                )
            ]
        ]
    )
    return keyboard


def get_edit_product_fields_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",
                    callback_data=f"admin_edit_prod_name_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìÑ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ",
                    callback_data=f"admin_edit_prod_desc_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É",
                    callback_data=f"admin_edit_prod_price_{product_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"admin_product_{product_id}"
                )
            ]
        ]
    )
    return keyboard